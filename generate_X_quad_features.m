function X_poly = generate_X_quad_features(X)
%{
Осуществляется генерация полиномиальных признаков второй степени. Данный инструмент
позволяет сделать из исходной матрицы признаков расширенную, в которую
будут входить дополнительные нелинейные (полиномиальные) столбцы. Пример
формирования признаков 2 степени: 
X1,X2,X3 -> X1,X2,X3 | X1^2, X1*X2, X1*X3, X2^2, X2*X3, X3^2

Такое преобразование позволяет нелинейно разделять классы линейными
моделями. В дальнейшем планируется решить задачу в общем виде, а именно
генерацию полиномиальных признаков с максимальной степенью N.
%}

n_f = size(X,2); % Количество признаков
n_f_new = n_f + (1+n_f)*n_f/2;
m = size(X,1); % Количество объектов
j1j2_arr = zeros(n_f_new-n_f,2);% j1,j2 индексы перемножаемых столбцов

%{
Формирование матрицы индексов перемножаемых стролбцов. Для примера X1,X2,X3
матрица будет иметь вид:
1 1
1 2
1 3
2 2
2 3
3 3
%}

%исходные значения 
k2 = 0;
delta_k = n_f-1;

for i = 1:n_f
    k1 = k2 + 1;
    k2 = k1 + delta_k;
    j1j2_arr(k1:k2,1) = i;
    j1j2_arr(k1:k2,2) = i:n_f;
    delta_k = delta_k - 1;
end

j1 = j1j2_arr(:,1);
j2 = j1j2_arr(:,2);

X_poly = zeros(m,n_f_new);
X_poly(:,1:n_f) = X;
k = 1;
for j = n_f+1:n_f_new
    X_poly(:,j) = X(:,j1(k)).*X(:,j2(k));
    k = k + 1;
end